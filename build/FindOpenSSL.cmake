

include(FindPackageHandleStandardArgs)

message(STATUS "Conan: Using autogenerated FindOpenSSL.cmake")
# Global approach
set(OpenSSL_FOUND 1)
set(OpenSSL_VERSION "1.1.0g")

find_package_handle_standard_args(OpenSSL REQUIRED_VARS OpenSSL_VERSION VERSION_VAR OpenSSL_VERSION)
mark_as_advanced(OpenSSL_FOUND OpenSSL_VERSION)



set(OpenSSL_INCLUDE_DIRS "/home/kbrunet/.conan/data/OpenSSL/1.1.0g/conan/stable/package/43c3d23ebb43177adc14f1dd19c227a1f6e22806/include")
set(OpenSSL_INCLUDE_DIR "/home/kbrunet/.conan/data/OpenSSL/1.1.0g/conan/stable/package/43c3d23ebb43177adc14f1dd19c227a1f6e22806/include")
set(OpenSSL_INCLUDES "/home/kbrunet/.conan/data/OpenSSL/1.1.0g/conan/stable/package/43c3d23ebb43177adc14f1dd19c227a1f6e22806/include")
set(OpenSSL_RES_DIRS )
set(OpenSSL_DEFINITIONS )
set(OpenSSL_LINKER_FLAGS_LIST "" "")
set(OpenSSL_COMPILE_DEFINITIONS )
set(OpenSSL_COMPILE_OPTIONS_LIST "" "")
set(OpenSSL_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
set(OpenSSL_LIBRARIES "") # Will be filled later
set(OpenSSL_LIBS "") # Same as OpenSSL_LIBRARIES
set(OpenSSL_SYSTEM_LIBS )
set(OpenSSL_FRAMEWORK_DIRS )
set(OpenSSL_FRAMEWORKS )
set(OpenSSL_FRAMEWORKS_FOUND "") # Will be filled later
set(OpenSSL_BUILD_MODULES_PATHS )

# Apple frameworks
if(APPLE)
    foreach(_FRAMEWORK ${OpenSSL_FRAMEWORKS})
        # https://cmake.org/pipermail/cmake-developers/2017-August/030199.html
        find_library(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND NAME ${_FRAMEWORK} PATHS ${OpenSSL_FRAMEWORK_DIRS})
        if(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND)
            list(APPEND OpenSSL_FRAMEWORKS_FOUND ${CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND})
        else()
            message(FATAL_ERROR "Framework library ${_FRAMEWORK} not found in paths: ${OpenSSL_FRAMEWORK_DIRS}")
        endif()
    endforeach()
endif()

mark_as_advanced(OpenSSL_INCLUDE_DIRS
                 OpenSSL_INCLUDE_DIR
                 OpenSSL_INCLUDES
                 OpenSSL_DEFINITIONS
                 OpenSSL_LINKER_FLAGS_LIST
                 OpenSSL_COMPILE_DEFINITIONS
                 OpenSSL_COMPILE_OPTIONS_LIST
                 OpenSSL_LIBRARIES
                 OpenSSL_LIBS
                 OpenSSL_LIBRARIES_TARGETS)

# Find the real .lib/.a and add them to OpenSSL_LIBS and OpenSSL_LIBRARY_LIST
set(OpenSSL_LIBRARY_LIST ssl crypto dl pthread)
set(OpenSSL_LIB_DIRS "/home/kbrunet/.conan/data/OpenSSL/1.1.0g/conan/stable/package/43c3d23ebb43177adc14f1dd19c227a1f6e22806/lib")
foreach(_LIBRARY_NAME ${OpenSSL_LIBRARY_LIST})
    unset(CONAN_FOUND_LIBRARY CACHE)
    find_library(CONAN_FOUND_LIBRARY NAME ${_LIBRARY_NAME} PATHS ${OpenSSL_LIB_DIRS}
                 NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
    if(CONAN_FOUND_LIBRARY)
        list(APPEND OpenSSL_LIBRARIES ${CONAN_FOUND_LIBRARY})
        if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
            # Create a micro-target for each lib/a found
            set(_LIB_NAME CONAN_LIB::OpenSSL_${_LIBRARY_NAME})
            if(NOT TARGET ${_LIB_NAME})
                # Create a micro-target for each lib/a found
                add_library(${_LIB_NAME} UNKNOWN IMPORTED)
                set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
            else()
                message(STATUS "Skipping already existing target: ${_LIB_NAME}")
            endif()
            list(APPEND OpenSSL_LIBRARIES_TARGETS ${_LIB_NAME})
        endif()
        message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
    else()
        message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
        list(APPEND OpenSSL_LIBRARIES_TARGETS ${_LIBRARY_NAME})
        list(APPEND OpenSSL_LIBRARIES ${_LIBRARY_NAME})
    endif()
endforeach()
set(OpenSSL_LIBS ${OpenSSL_LIBRARIES})

foreach(_FRAMEWORK ${OpenSSL_FRAMEWORKS_FOUND})
    list(APPEND OpenSSL_LIBRARIES_TARGETS ${_FRAMEWORK})
    list(APPEND OpenSSL_LIBRARIES ${_FRAMEWORK})
endforeach()

foreach(_SYSTEM_LIB ${OpenSSL_SYSTEM_LIB})
    list(APPEND OpenSSL_LIBRARIES_TARGETS ${_SYSTEM_LIB})
    list(APPEND OpenSSL_LIBRARIES ${_SYSTEM_LIB})
endforeach()

set(CMAKE_MODULE_PATH "/home/kbrunet/.conan/data/OpenSSL/1.1.0g/conan/stable/package/43c3d23ebb43177adc14f1dd19c227a1f6e22806/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "/home/kbrunet/.conan/data/OpenSSL/1.1.0g/conan/stable/package/43c3d23ebb43177adc14f1dd19c227a1f6e22806/" ${CMAKE_PREFIX_PATH})

foreach(_BUILD_MODULE_PATH ${OpenSSL_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET OpenSSL::OpenSSL)
        add_library(OpenSSL::OpenSSL INTERFACE IMPORTED)
        
    if(OpenSSL_INCLUDE_DIRS)
      set_target_properties(OpenSSL::OpenSSL PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${OpenSSL_INCLUDE_DIRS}")
    endif()
    set_property(TARGET OpenSSL::OpenSSL PROPERTY INTERFACE_LINK_LIBRARIES ${OpenSSL_LIBRARIES_TARGETS} ${OpenSSL_SYSTEM_LIBS} "${OpenSSL_LINKER_FLAGS_LIST}")
    set_property(TARGET OpenSSL::OpenSSL PROPERTY INTERFACE_COMPILE_DEFINITIONS ${OpenSSL_COMPILE_DEFINITIONS})
    set_property(TARGET OpenSSL::OpenSSL PROPERTY INTERFACE_COMPILE_OPTIONS "${OpenSSL_COMPILE_OPTIONS_LIST}")

        
    endif()
endif()
